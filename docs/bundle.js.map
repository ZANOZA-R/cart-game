{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://cart-game/./src/components/global.ts","webpack://cart-game/./src/components/end-game-component.ts","webpack://cart-game/./src/components/help-component.ts","webpack://cart-game/./src/components/presets-cards-component.ts","webpack://cart-game/./src/components/difficulty-component.ts","webpack://cart-game/./src/index.ts"],"sourcesContent":["type Card = {\r\n    mainElement: HTMLElement | null;\r\n    suit: Array<string>;\r\n    rank: Array<string>;\r\n    randomPreset: Array<string>;\r\n    difficulty: string;\r\n    selectedCard: string | undefined;\r\n    index: number;\r\n    timer: string;\r\n    timerCheck: string;\r\n};\r\n\r\nconst globalThis: Card = {\r\n    mainElement: document.getElementById(\"main\"),\r\n    suit: [\"spades\", \"hearts\", \"diamonds\", \"clubs\"],\r\n    rank: [\"A\", \"K\", \"Q\", \"J\", \"10\", \"9\", \"8\", \"7\", \"6\"],\r\n    randomPreset: new Array<string>(),\r\n    difficulty: \"\",\r\n    selectedCard: \"clear\",\r\n    index: 0,\r\n    timer: \"\",\r\n    timerCheck: \"on\",\r\n};\r\n\r\nexport { globalThis };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { globalThis } from \"./global\";\r\nimport { renderingDifficulty } from \"./difficulty-component\";\r\n\r\nfunction renderingWinGame() {\r\n    if ( globalThis.mainElement instanceof HTMLElement) {\r\n    globalThis.mainElement.innerHTML = `\r\n<section class=\"difficulty\">\r\n<h1 class=\"difficulty__win\"></h1>\r\n<h2 class=\"difficulty__title-win\">Вы выиграли!</h2>\r\n<p class=\"difficulty__text\">Затраченное время:</p>\r\n<p class=\"difficulty__timer\">${globalThis.timer}</p>\r\n<button class=\"difficulty__buttonStart\">Играть снова</button>\r\n</section>\r\n`;\r\n    }\r\n    checkButtonEnd();\r\n}\r\n\r\nfunction renderingloseGame() {\r\n    if ( globalThis.mainElement instanceof HTMLElement) {\r\n    globalThis.mainElement.innerHTML = `\r\n<section class=\"difficulty\">\r\n<h1 class=\"difficulty__lose\"></h1>\r\n<h2 class=\"difficulty__title-win\">Вы проиграли!</h2>\r\n<p class=\"difficulty__text\">Затраченное время:</p>\r\n<p class=\"difficulty__timer\">${globalThis.timer}</p>\r\n<button class=\"difficulty__buttonStart\">Играть снова</button>\r\n</section>\r\n`;\r\n    }\r\n    checkButtonEnd();\r\n}\r\n\r\nfunction checkButtonEnd() {\r\n    const startButtonElement = document.querySelector(\r\n        \".difficulty__buttonStart\"\r\n    );\r\n    if ( startButtonElement instanceof HTMLElement) {\r\n\r\n    startButtonElement.addEventListener(\"click\", () => {\r\n        globalThis.selectedCard = \"clear\";\r\n        globalThis.index = 0;\r\n        renderingDifficulty();\r\n    });\r\n}\r\n}\r\n\r\nexport { renderingWinGame, renderingloseGame };\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nimport { globalThis } from \"./global\";\r\n\r\nfunction randomSuitAndRank(numb: number) {\r\n    const randomPreset = [];\r\n    for (let i = 0; i < numb; i++) {\r\n        if (globalThis.suit.length === 0) {\r\n            globalThis.suit = [\"spades\", \"hearts\", \"diamonds\", \"clubs\"];\r\n        }\r\n        if (globalThis.rank.length === 0) {\r\n            globalThis.rank = [\"A\", \"K\", \"Q\", \"J\", \"10\", \"9\", \"8\", \"7\", \"6\"];\r\n        }\r\n        const randomSuit = Math.floor(Math.random() * globalThis.suit.length);\r\n        const randomRank = Math.floor(Math.random() * globalThis.rank.length);\r\n        randomPreset[i] =\r\n            globalThis.suit[randomSuit] + globalThis.rank[randomRank];\r\n        globalThis.suit.splice(randomSuit, 1);\r\n        globalThis.rank.splice(randomRank, 1);\r\n    }\r\n    globalThis.randomPreset = [...randomPreset, ...randomPreset];\r\n    return;\r\n}\r\n\r\nfunction randomButtonElements(numb: number) {\r\n    globalThis.index = numb;\r\n    const randomButtonElement = [];\r\n    for (let i = 0; i < numb; i++) {\r\n        const randomI = Math.floor(\r\n            Math.random() * globalThis.randomPreset.length\r\n        );\r\n        randomButtonElement[i] = `\r\n        <button data-preset=\"${globalThis.randomPreset[randomI]}\" class=\"game__cards-button preset__${globalThis.randomPreset[randomI]}\"></button>\r\n        `;\r\n        globalThis.randomPreset.splice(randomI, 1);\r\n    }\r\n    return randomButtonElement.join(\"\");\r\n}\r\n\r\nfunction startTime() {\r\n    const timerElement = document.getElementById(\"timer\");\r\n    let sec = 0;\r\n    let min = 0;\r\n    \r\n\r\n    function tick() {\r\n        sec++;\r\n        if (sec >= 60) {\r\n            sec = 0;\r\n            min++;\r\n            if (min >= 60) {\r\n                min = 0;\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    function add() {\r\n        tick();\r\n        if ( timerElement instanceof HTMLElement) {\r\n        timerElement.innerHTML =\r\n            (min > 9 ? min : \"0\" + min) + \":\" + (sec > 9 ? sec : \"0\" + sec);\r\n        globalThis.timer = timerElement.innerHTML;\r\n        }\r\n        timer();\r\n        return;\r\n    }\r\n\r\n    function timer() {\r\n        const t = setTimeout(add, 1000);\r\n        if (globalThis.timerCheck === \"on\") {\r\n            clearTimeout(t);\r\n            return;\r\n        }\r\n        return;\r\n    }\r\n\r\n    timer();\r\n}\r\n\r\nexport { randomSuitAndRank, randomButtonElements, startTime };\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { renderingDifficulty } from \"./difficulty-component\";\nimport { globalThis } from \"./global\";\nimport { renderingWinGame, renderingloseGame } from \"./end-game-component\";\nimport {\n    randomSuitAndRank,\n    randomButtonElements,\n    startTime,\n} from \"./help-component\";\n\nconst gameTitleElement = `\n<div class=\"game__title\">\n    <div class=\"game__time-box\">\n        <div class=\"game__text-box\">\n            <p class=\"game__text\">min</p>\n            <p class=\"game__text\">sek</p>\n        </div>\n        <span id=\"timer\" class=\"game__time\">00:00</span>\n    </div>\n    <button class=\"game__again-button\">Начать заново</button>\n</div>\n`;\n\nfunction renderingPresetsCards() {\n    if (globalThis.mainElement instanceof HTMLElement) {\n    switch (globalThis.difficulty) {\n        case \"easy\":\n            randomSuitAndRank(3);\n            globalThis.mainElement.innerHTML = `\n            <div class=\"game\">\n                ${gameTitleElement}\n                <div class=\"game__cards\">\n                    ${randomButtonElements(6)}\n                </div>\n            </div>\n            `;\n            break;\n        case \"average\":\n            randomSuitAndRank(6);\n            globalThis.mainElement.innerHTML = `\n            <div class=\"game\">\n                ${gameTitleElement}\n                <div class=\"game__cards\">\n                    ${randomButtonElements(12)}\n                </div>\n            </div>\n            `;\n            break;\n        case \"hard\":\n            randomSuitAndRank(9);\n            globalThis.mainElement.innerHTML = `\n            <div class=\"game\">\n                ${gameTitleElement}\n                <div class=\"game__cards\">\n                    ${randomButtonElements(18)}\n                </div>\n            </div>\n            `;\n            break;\n        default:\n            break;\n    }\n}\n\n    const againButton = document.querySelector(\".game__again-button\");\n    if (againButton instanceof HTMLElement) {\n    againButton.addEventListener(\"click\", () => {\n        globalThis.selectedCard = \"clear\";\n        globalThis.timerCheck = \"on\";\n        renderingDifficulty();\n    });\n    }\n    checkButtonPresets();\n}\n\nfunction checkButtonPresets() {\n    const buttonElements = Array.from( document.querySelectorAll(\".game__cards-button\"));\n    let cardIndex = 0;\n    setTimeout(() => {\n        for (const buttonElement of buttonElements) {\n            if (buttonElement instanceof HTMLElement) {\n                buttonElement.classList.remove(\n                    `preset__${buttonElement.dataset.preset}`\n                );\n            }\n        }\n\n        for (const buttonElement of buttonElements) {\n            if (buttonElement instanceof HTMLElement) {\n                buttonElement.addEventListener(\"click\", () => {\n                    buttonElement.classList.add(\"button-active\");\n                    buttonElement.classList.add(\n                        `preset__${buttonElement.dataset.preset}`\n                    );\n                    switch (globalThis.selectedCard) {\n                        case \"clear\":\n                            if (globalThis.timerCheck === \"on\") {\n                                globalThis.timerCheck = \"off\";\n                                startTime();\n                            }\n                            globalThis.selectedCard =\n                                buttonElement.dataset.preset;\n                            buttonElement.dataset.preset = \"open\";\n                            break;\n                        case \"open\":\n                            globalThis.selectedCard = \"clear\";\n                            break;\n                        case buttonElement.dataset.preset:\n                            cardIndex = cardIndex + 2;\n                            if (globalThis.index === cardIndex) {\n                                globalThis.timerCheck = \"on\";\n                                renderingWinGame();\n                                return;\n                            }\n                            globalThis.selectedCard = \"clear\";\n                            buttonElement.dataset.preset = \"open\";\n                            break;\n                        default:\n                            globalThis.timerCheck = \"on\";\n                            renderingloseGame();\n                            break;\n                    }\n                });\n            }\n        }\n    }, 5 * 1000);\n}\n\nexport { renderingPresetsCards };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { renderingPresetsCards } from \"./presets-cards-component\";\nimport { globalThis } from \"./global\";\n\nfunction renderingDifficulty() {\n    if (globalThis.mainElement instanceof HTMLElement) {\n        globalThis.mainElement.innerHTML = `\n<section class=\"difficulty\">\n<h1 class=\"difficulty__title\">Выбери сложность</h1>\n<div class=\"difficulty__choose\">\n    <button class=\"difficulty__chooseButton\">1</button>\n    <button class=\"difficulty__chooseButton\">2</button>\n    <button class=\"difficulty__chooseButton\">3</button>\n</div>\n<button class=\"difficulty__buttonStart\">Старт</button>\n</section>\n`;\n    }\n    checkButtonDifficulty();\n}\n\nfunction checkButtonDifficulty() {\n    const chooseButtonElements = Array.from(\n        document.querySelectorAll(\".difficulty__chooseButton\")\n    );\n    const startButtonElement = document.querySelector(\n        \".difficulty__buttonStart\"\n    );\n\n    for (const chooseButtonElement of chooseButtonElements) {\n        chooseButtonElement.addEventListener(\"click\", () => {\n            for (const chooseButtonElement of chooseButtonElements) {\n                chooseButtonElement.classList.remove(\"button-active\");\n            }\n            chooseButtonElement.classList.add(\"button-active\");\n            switch (chooseButtonElement.textContent) {\n                case \"1\":\n                    globalThis.difficulty = \"easy\";\n                    break;\n                case \"2\":\n                    globalThis.difficulty = \"average\";\n                    break;\n                case \"3\":\n                    globalThis.difficulty = \"hard\";\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n    if (startButtonElement instanceof HTMLElement) {\n        startButtonElement.addEventListener(\"click\", () => {\n            if (!globalThis.difficulty) {\n                alert(\"С начало выберете сложность\");\n                return;\n            }\n            renderingPresetsCards();\n        });\n    }\n}\n\nexport { renderingDifficulty };\n","import \"./css/styles.css\";\nimport { renderingDifficulty } from \"./components/difficulty-component\";\n\nrenderingDifficulty();\n\n"],"names":["globalThis","mainElement","document","getElementById","suit","rank","randomPreset","Array","difficulty","selectedCard","index","timer","timerCheck","checkButtonEnd","startButtonElement","querySelector","HTMLElement","addEventListener","renderingDifficulty","randomSuitAndRank","numb","i","length","randomSuit","Math","floor","random","randomRank","splice","randomButtonElements","randomButtonElement","randomI","join","gameTitleElement","renderingPresetsCards","innerHTML","buttonElements","cardIndex","againButton","from","querySelectorAll","setTimeout","buttonElement","classList","remove","dataset","preset","add","timerElement","sec","min","t","clearTimeout","startTime","chooseButtonElements","chooseButtonElement","textContent","alert","checkButtonDifficulty"],"sourceRoot":""}